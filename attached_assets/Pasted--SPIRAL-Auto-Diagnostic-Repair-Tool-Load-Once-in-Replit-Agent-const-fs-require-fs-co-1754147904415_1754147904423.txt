// üõ†Ô∏è SPIRAL Auto-Diagnostic & Repair Tool - Load Once in Replit Agent
const fs = require("fs");
const fetch = require("node-fetch");
const puppeteer = require("puppeteer");

(async () => {
  console.log("üîç SPIRAL Diagnostic Started...\n");

  const routes = [
    "/", "/products", "/about-spiral", "/loyalty", "/cart",
    "/retailer-dashboard-new", "/shopper-dashboard", "/admin-login"
  ];

  const buttonLabels = [
    "More About SPIRAL", "Products", "Loyalty", "Cart",
    "Retailer Dashboard", "Shopper Dashboard"
  ];

  const brokenRoutes = [];
  for (const route of routes) {
    try {
      const res = await fetch(`https://spiralshops.com${route}`);
      if (!res.ok) brokenRoutes.push(route);
    } catch {
      brokenRoutes.push(route);
    }
  }

  const browser = await puppeteer.launch({ headless: true });
  const page = await browser.newPage();
  await page.goto("https://spiralshops.com", { waitUntil: "networkidle2" });

  const brokenButtons = [];
  for (const label of buttonLabels) {
    const btn = await page.$x(`//a[contains(text(), '${label}')] | //button[contains(text(), '${label}')]`);
    if (btn.length === 0) brokenButtons.push(label);
  }

  await browser.close();

  console.log("üö® Broken Routes:", brokenRoutes);
  console.log("üö® Missing Buttons:", brokenButtons);

  // Fix routes in App.js
  const routerPath = "./src/App.js"; // Adjust if using Routes.jsx
  if (fs.existsSync(routerPath)) {
    let code = fs.readFileSync(routerPath, "utf8");
    brokenRoutes.forEach(route => {
      const compName = route === "/" ? "Home" :
        route.replace(/\//g, "").replace(/-([a-z])/g, (_, c) => c.toUpperCase()).replace(/^./, m => m.toUpperCase());
      if (!code.includes(`path="${route}"`)) {
        code = code.replace(
          /<\/Routes>/,
          `  <Route path="${route}" element={<${compName} />} />\n</Routes>`
        );
      }
    });
    fs.writeFileSync(routerPath, code);
    console.log("‚úÖ Route paths auto-corrected in App.js");
  } else {
    console.warn("‚ùå App.js not found. Manual check required.");
  }

  // robots.txt for security
  const robotsPath = "./public/robots.txt";
  const robotsContent = `User-agent: *\nDisallow: /admin-login\n`;
  fs.writeFileSync(robotsPath, robotsContent);
  console.log("üîí robots.txt created to block /admin-login from indexing");

  // Final status
  console.log("\n‚úÖ SPIRAL Diagnostic & Auto-Fix Complete.");
  console.log("Next steps:\n- Re-test core buttons\n- Confirm route rendering\n- Run full test suite");
})();