/agent

# SPIRAL – One-Shot Production Deployment + Final Confirmation Sweep

## OBJECTIVE
Configure and deploy SPIRAL for production on Vercel + IBM Cloudant (watsonx/WATSONX disabled by default), enable Investor Mode, add legal/SEO/observability/backups, run Stripe TEST checkout, and produce FINAL_CONFIRMATION.md with explicit GO/NO-GO for investor demos and pilot onboarding.

## ACCEPTANCE CRITERIA
- Stack: **Vercel (frontend/api)** + **IBM Cloudant (database)** confirmed in prod; **WATSONX_ENABLED=0** (off).
- Investor Mode enabled (`INVESTOR_MODE=1`) with working /investor + 4 demo routes.
- Security: CSP headers present, admin not indexable, API rate limit returns 429 >60 RPM.
- Legal pages live: /privacy, /terms, /dmca.
- SEO live: /sitemap.xml, /robots.txt (+ canonicals, OG tags on key pages).
- Observability: Sentry event captured; Plausible pageview + “Checkout Success” goal recorded; /api/health OK; uptime check documented.
- Backups: Nightly Cloudant export job (script + one successful run proof).
- Stripe: TEST checkout succeeds (4242 card); LIVE stays disabled (STRIPE_MODE=test).
- Demo safety: /api/admin/demo-reset requires DEMO_RESET_KEY and completes <15s.
- FINAL_CONFIRMATION.md created with evidence and **GO/NO-GO**.

---

## PHASE A — PREP & DOCS
1) Create/refresh docs:
   - docs/VERCEL_DEPLOYMENT_GUIDE.md  (Vercel project import, envs, build, domain/SSL)
   - docs/IBM_CLOUD_DEPLOYMENT_GUIDE.md (Cloudant service, creds, indexes)
   - docs/DEPLOYMENT_CHECKLIST.md (preflight -> go-live)

2) Ensure `.env.template` includes (redact in reports):
   NODE_ENV=production
   INVESTOR_MODE=1
   STRIPE_MODE=test
   STRIPE_SECRET_KEY=
   STRIPE_PUBLISHABLE_KEY=
   STRIPE_LIVE_SECRET_KEY=
   STRIPE_LIVE_PUBLISHABLE_KEY=
   LIVE_SAFETY_ON=0
   CLOUDANT_URL=
   CLOUDANT_APIKEY=
   CLOUDANT_DB=spiral
   JWT_SECRET=
   ADMIN_EMAIL=
   ADMIN_PASS=
   SENDGRID_API_KEY=
   SENTRY_DSN=
   PLAUSIBLE_DOMAIN=spiralshops.com
   RATE_LIMIT_RPM=60
   SHIPPING_MODE=mock
   PRIMARY_DOMAIN=spiralshops.com
   SECONDARY_DOMAIN=spiralmalls.com
   DEMO_RESET_KEY=
   WATSONX_ENABLED=0
   INVESTOR_SECRET=   # optional gate; leave blank to disable

3) Verify no hardcoded secrets remain; refactor to env and summarize diffs in reports.

---

## PHASE B — VERCEL SETUP & BUILD
1) Create/confirm Vercel project:
   - Framework: Vite (or current framework—auto-detect ok)
   - Build Command: `npm run build`
   - Output Directory: `dist` (or current)
2) Add all env vars from `.env.template` to Vercel (test + live Stripe keys, but keep STRIPE_MODE=test).
3) Deploy to preview; smoke test /, /api/health, /investor (if enabled), /privacy, /terms, /dmca, /sitemap.xml.
4) Domains:
   - Set `spiralshops.com` as primary (auto SSL).
   - Optional alias `spiralmalls.com`.
   - Document DNS instructions + verification steps in FINAL_CONFIRMATION.md.

---

## PHASE C — IBM CLOUDANT (PROD)
1) Verify Cloudant creds; connect and R/W test.
2) Ensure indexes exist for:
   - stores by mallSlug
   - products by retailerSlug + category
   - orders by userId
   Create if missing and log.
3) Seed production DB (existing seed scripts). Log counts imported.

---

## PHASE D — INVESTOR MODE & DEMO ROUTES
1) Ensure `INVESTOR_MODE=1`.
2) Provide/verify routes (create if missing):
   - /investor (KPIs panel + links)
   - /demo/shopper
   - /demo/retailer
   - /demo/mall
   - /demo/admin
   If INVESTOR_SECRET is set, require `?key=${INVESTOR_SECRET}` or 404.
3) Confirm content explains the click path and contains links into real flows.

---

## PHASE E — LEGAL, SEO, SECURITY
1) Legal pages:
   - /privacy, /terms, /dmca (link in footer, last-updated date, contact)
2) SEO:
   - public/sitemap.xml + public/robots.txt (disallow /admin, /api)
   - Canonical + OG/Twitter meta on: home, product, store, mall hub, investor
3) Security:
   - CSP + security headers present (vercel.json)
   - /admin noindex + robots disallow
   - API rate limiter mounted on /api; emit 429 >60 r/min/IP

---

## PHASE F — MONITORING & BACKUPS
1) Sentry: trigger one test error in prod; record Event ID.
2) Plausible/GA4:
   - Verify pageviews on /investor.
   - Create/confirm Goal “Checkout Success”; trigger once; record timestamp.
3) Uptime:
   - Add checks for /, /api/health, /investor, and checkout success path (if supported); else document existing monitor solution.
4) Backups:
   - scripts/backup-cloudant.mjs: export retailers, products, orders, users to /backups/YYYY-MM-DD/*.json
   - Run once now; log path + counts.
   - Configure scheduler (Replit cron/GH Actions/Vercel Cron) daily; document cron + secrets.

---

## PHASE G — STRIPE TEST & DEMO RESET
1) Stripe TEST:
   - Complete test checkout (card 4242 4242 4242 4242, any future expiry/CVC).
   - Record order ID + Stripe test payment ID.
   - Assert STRIPE_MODE=test and LIVE_SAFETY_ON != 1.
   - Create docs/STRIPE_GO_LIVE.md (keys, switch, $0.50 live test charge, refund, webhook, rollback).
2) Demo reset:
   - /api/admin/demo-reset requires header x-demo-reset-key=DEMO_RESET_KEY.
   - Run once; ensure completion <15s and log counts cleared/seeded.

---

## PHASE H — PERFORMANCE SNAPSHOT
- Run Lighthouse/Next analyzer for home, product, store, mall hub, investor.
- Record LCP, CLS, TBT and JS bundle size (target ~845KB ±15%).
- If > ~1MB, list top 3 savings (code-split, image opt, dep trim).

---

## PHASE I — FINAL CONFIRMATION REPORT
Create **FINAL_CONFIRMATION.md** (markdown) containing:
- Title: “SPIRAL Production Confirmation” + date/time (UTC and local)
- Stack confirmation (Vercel + Cloudant; WATSONX off)
- ENV snapshot (redacted): PRIMARY_DOMAIN, STRIPE_MODE, INVESTOR_MODE, CLOUDANT_DB, WATSONX_ENABLED
- URL checks table: route → status → notes → PASS/FAIL
- Security evidence: sample CSP header, 429 proof, /admin noindex proof
- Stripe proof: order ID + Stripe test payment ID
- Cloudant: R/W/Delete proof + indexes status
- Demo reset: duration + counts cleared/seeded
- Observability: Sentry Event ID; Plausible pageview + goal timestamp; uptime check notes
- Backups: export path + per-collection counts; scheduler details
- Performance: LCP/CLS/TBT + bundle size; any warnings
- **GO/NO-GO** summary for investor demos & pilot onboarding (with rationale)
- Residual TODOs (priority High/Med/Low) if any

---

## OUTPUT
- Print the absolute path to FINAL_CONFIRMATION.md.
- Print a PASS/FAIL summary vs. Acceptance Criteria.
- Print key investor demo links (/, /investor, /demo/*, /api/health).
- Print DNS steps if any records still pending.

## CONSTRAINTS
- Keep **STRIPE_MODE=test** and **LIVE_SAFETY_ON=0**.
- Do NOT enable watsonx; keep **WATSONX_ENABLED=0**.
- No breaking schema changes. If any required, provide migration steps + re-seed sequence.
- Prefer minimal, safe fixes that unblock demo paths over large refactors.