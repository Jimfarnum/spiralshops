// 📝 components/RetailerOnboardingForm.jsx — SPIRAL Retailer Application Form

import React, { useState } from "react";

const RetailerOnboardingForm = () => {
  const [formData, setFormData] = useState({
    storeName: "",
    email: "",
    phone: "",
    website: "",
    mallId: "",
    categories: "",
    acceptsSpirals: false,
  });
  const [status, setStatus] = useState("idle");

  const handleChange = (e) => {
    const { name, value, type, checked } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: type === "checkbox" ? checked : value
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setStatus("submitting");
    const res = await fetch("/api/retailer-onboard", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(formData)
    });
    const result = await res.json();
    setStatus(result.success ? "submitted" : "error");
  };

  return (
    <form onSubmit={handleSubmit} style={{ maxWidth: 500, margin: "auto", padding: 20 }}>
      <h2>🛍 Join SPIRAL as a Retailer</h2>
      <input name="storeName" placeholder="Store Name" required onChange={handleChange} />
      <input name="email" type="email" placeholder="Email" required onChange={handleChange} />
      <input name="phone" placeholder="Phone" required onChange={handleChange} />
      <input name="website" placeholder="Website (optional)" onChange={handleChange} />
      <input name="mallId" placeholder="Mall ID (if applicable)" onChange={handleChange} />
      <input name="categories" placeholder="Categories (comma-separated)" onChange={handleChange} />
      <label>
        <input type="checkbox" name="acceptsSpirals" onChange={handleChange} />
        Accepts SPIRALS?
      </label>
      <br /><br />
      <button type="submit">Submit Application</button>
      {status === "submitting" && <p>Submitting...</p>}
      {status === "submitted" && <p>✅ Application received!</p>}
      {status === "error" && <p>❌ Error submitting application. Try again.</p>}
    </form>
  );
};

export default RetailerOnboardingForm;