#!/usr/bin/env bash
set -euo pipefail

# ─────────────────────────────────────────────────────────────
# SPIRAL one-shot setup: hardened server + public fallback + /investors
# After this finishes:
#   - Start the app with:  npm start
#   - Healthcheck:         /api/health
#   - Public fallback:     /
#   - Investor page:       /investors  (noindex)
#   - Protected docs:      /investors/data?key=YOUR_SECRET
# Optional env:
#   - FB_PIXEL_ID          (if present, pixel loader logs as enabled)
#   - INVESTOR_KEY         (token for /investors/data, else access is read-only message)
# ─────────────────────────────────────────────────────────────

mkdir -p server public/investors public/scripts public/investors/data

# package.json (ESM + express)
cat > package.json << 'EOF'
{
  "name": "spiralshops",
  "version": "1.0.0",
  "type": "module",
  "private": true,
  "engines": { "node": ">=18" },
  "scripts": {
    "start": "node server/index.js",
    "dev": "node server/index.js"
  },
  "dependencies": {
    "express": "^4.19.2"
  }
}
EOF

# server hardening middleware
cat > server/app-hardening.js << 'EOF'
import express from "express";

export function attachHardening(app) {
  // Healthcheck
  app.get("/api/health", (req, res) => {
    res.set("Cache-Control", "no-store");
    res.json({ status: "ok", service: "spiralshops", version: "1.0.0" });
  });

  // Security headers
  app.use((req, res, next) => {
    res.setHeader("Strict-Transport-Security", "max-age=31536000; includeSubDomains; preload");
    res.setHeader("X-Content-Type-Options", "nosniff");
    res.setHeader("Referrer-Policy", "strict-origin-when-cross-origin");
    // Light CSP; tighten as you enumerate your CDNs and inline needs
    res.setHeader("Content-Security-Policy",
      [
        "default-src 'self' https: data:",
        "script-src 'self' https: 'unsafe-inline' 'unsafe-eval'",
        "style-src 'self' https: 'unsafe-inline'",
        "img-src 'self' https: data:",
        "font-src 'self' https: data:",
        "connect-src 'self' https:",
        "frame-ancestors 'self'",
        "base-uri 'self'"
      ].join("; ")
    );
    if (req.path.startsWith("/investors")) {
      // Double-noindex for investor paths
      res.setHeader("X-Robots-Tag", "noindex, nofollow");
    }
    next();
  });
}
EOF

# main server
cat > server/index.js << 'EOF'
import express from "express";
import path from "path";
import { fileURLToPath } from "url";
import { attachHardening } from "./app-hardening.js";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const app = express();

attachHardening(app);

// Helpful constants
const publicDir = path.join(__dirname, "..", "public");
const investorsDataDir = path.join(publicDir, "investors", "data");

// Serve static assets early for instant /investors load
app.use(express.static(publicDir, { index: false }));

// Simple pixel loader (non-blocking)
app.get("/scripts/pixel.js", (req, res) => {
  const enabled = !!process.env.FB_PIXEL_ID;
  const payload = enabled
    ? `console.log("FB Pixel enabled:", "${process.env.FB_PIXEL_ID}");`
    : `console.debug("Pixel disabled (no FB_PIXEL_ID).");`;
  res.type("application/javascript").send(payload);
});

// Optional token-gated investor data
function investorAuth(req, res, next) {
  const keyFromEnv = process.env.INVESTOR_KEY || "";
  if (!keyFromEnv) {
    return res
      .status(200)
      .send("Investor data area not configured. Set INVESTOR_KEY env for token-gated access.");
  }
  const provided =
    req.query.key ||
    req.get("x-investor-key") ||
    req.cookies?.investor_key ||
    "";
  if (provided && provided === keyFromEnv) return next();
  return res.status(401).send("Unauthorized. Provide ?key=YOUR_TOKEN or X-Investor-Key header.");
}
app.use("/investors/data", investorAuth, express.static(investorsDataDir, { index: false }));

// SPA-safe fallback for everything else to JS-free homepage
app.get("*", (req, res) => {
  res.sendFile(path.join(publicDir, "index.fallback.html"));
});

const port = process.env.PORT || 3000;
app.listen(port, () => console.log(`SPIRAL server running on :${port}`));
EOF

# public homepage fallback (renders even if JS fails)
cat > public/index.fallback.html << 'EOF'
<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>SPIRAL — The Local Shopping Platform</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="description" content="One cart. Thousands of local stores. Tech that builds towns, not empties them." />
  <meta property="og:title" content="SPIRAL — Tech that builds towns" />
  <meta property="og:description" content="One cart uniting local stores, malls, and makers. All for one, one for all." />
  <meta property="og:image" content="/og-image.jpg" />
  <meta name="twitter:card" content="summary_large_image" />
  <style>
    :root { --ink:#0b1220; --muted:#6b7280; --bg:#fff; --btn:#111827; --br:14px; }
    * { box-sizing: border-box; }
    body { margin:0; font-family: system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif; color:var(--ink); background:var(--bg); }
    .wrap { max-width: 960px; margin: 0 auto; padding: 24px; }
    header { display:flex; align-items:center; gap:12px; padding:16px 0; }
    header img { height:40px; }
    h1 { margin: 8px 0 12px; font-size: 1.9rem; }
    p.lede { font-size: 1.08rem; line-height: 1.55; color:#1f2937; }
    .cta { margin: 16px 0 28px; display:flex; gap:12px; flex-wrap:wrap; }
    .btn { background:var(--btn); color:#fff; padding:12px 16px; border-radius:12px; text-decoration:none; display:inline-block; }
    .btn.alt { background:#f3f4f6; color:#111827; }
    section { margin-top: 18px; }
    ul { margin-top: 6px; }
    footer { margin-top: 44px; padding-top: 16px; border-top: 1px solid #e5e7eb; color:var(--muted); font-size:.92rem; }
    a { color: inherit; text-decoration: underline; }
  </style>
</head>
<body>
  <div class="wrap">
    <header>
      <img src="/logo.png" alt="SPIRAL logo" onerror="this.style.display='none'"/>
      <strong>SPIRAL</strong>
    </header>

    <h1>One cart. Thousands of local stores.</h1>
    <p class="lede">SPIRAL keeps dollars in your community by connecting shoppers, malls, and retailers in one checkout—online convenience with hometown economics.</p>

    <div class="cta">
      <a class="btn" href="/stores">Explore Stores</a>
      <a class="btn alt" href="/p0-features-demo">See Product Demo</a>
      <a class="btn alt" href="/investors">Investor Overview</a>
    </div>

    <section>
      <h3>Why SPIRAL</h3>
      <ul>
        <li>All for one, one for all: shoppers, retailers, and malls all win.</li>
        <li>Local dollars recirculate—and that builds jobs & community.</li>
        <li>Amazon-level UX, hometown impact.</li>
      </ul>
    </section>

    <footer>
      Status: <a href="/api/health">/api/health</a> • Contact: <a href="mailto:invest@spiralshops.com">invest@spiralshops.com</a>
    </footer>
  </div>

  <!-- Non-blocking pixel -->
  <script defer src="/scripts/pixel.js"></script>
</body>
</html>
EOF

# investor overview page (noindex)
cat > public/investors/index.html << 'EOF'
<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>SPIRAL — Investor Overview</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="description" content="SPIRAL — The Local Shopping Platform. Investor overview, thesis, and deck." />
  <meta name="robots" content="noindex, nofollow" />
  <meta property="og:title" content="SPIRAL — Investor Overview" />
  <meta property="og:description" content="Tech that builds towns: one cart connecting local stores, malls, and shoppers." />
  <meta property="og:image" content="/og-investors.jpg" />
  <meta name="twitter:card" content="summary_large_image" />
  <style>
    :root { --ink:#0b1220; --muted:#6b7280; --bg:#fff; --btn:#111827; }
    * { box-sizing: border-box; }
    body { margin:0; font-family: system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif; color:var(--ink); background:var(--bg); }
    .wrap { max-width: 920px; margin: 0 auto; padding: 28px 20px 60px; }
    header { display:flex; align-items:center; gap:12px; padding:16px 0; }
    header img { height: 40px; }
    h1 { margin: 10px 0 12px; font-size: 2rem; }
    p.lede { font-size: 1.08rem; line-height: 1.6; }
    .grid { display:grid; grid-template-columns: 1fr; gap: 16px; }
    .card { border:1px solid #e5e7eb; border-radius:14px; padding:16px; }
    .btn { background:var(--btn); color:white; padding:12px 16px; border-radius:12px; text-decoration:none; display:inline-block; }
    .btn.alt { background:#f3f4f6; color:#111827; }
    .muted { color:var(--muted); }
    .row { display:flex; gap:12px; flex-wrap:wrap; }
    footer { margin-top: 36px; color:var(--muted); font-size:.92rem; }
    a { color: inherit; text-decoration: underline; }
  </style>
</head>
<body>
  <div class="wrap">
    <header>
      <img src="/logo.png" alt="SPIRAL logo" onerror="this.style.display='none'"/>
      <strong>SPIRAL</strong>
    </header>

    <h1>Investor Overview</h1>
    <p class="lede">SPIRAL is the local shopping platform: one cart connecting thousands of local stores and malls, so dollars recirculate in the community. Tech that builds towns.</p>

    <div class="grid">
      <div class="card">
        <h3>Thesis (60 seconds)</h3>
        <ul>
          <li><strong>All for one, one for all:</strong> shoppers, retailers, and malls all win.</li>
          <li><strong>Mass-market UX, local economics:</strong> Amazon-level convenience with hometown impact.</li>
          <li><strong>Movement, not just a marketplace:</strong> social shopping + pickup centers revive foot traffic.</li>
        </ul>
      </div>

      <div class="card">
        <h3>Why Now</h3>
        <ul>
          <li>Local retail is over 50% of U.S. spend—underserved by big platforms.</li>
          <li>Malls seek modern omni-channel partners; retailers want discovery without punitive fees.</li>
          <li>AI + social + real pickup = the missing bridge from online convenience to local prosperity.</li>
        </ul>
      </div>

      <div class="card">
        <h3>Traction & Readiness</h3>
        <ul>
          <li>MVP feature parity with major e-commerce platforms (multi-retailer cart, order mgmt, loyalty).</li>
          <li>Retailer onboarding system + admin tools completed; national launch plan staged.</li>
          <li>Security, IP monitoring, and AI ops plan in place.</li>
        </ul>
      </div>

      <div class="card">
        <h3>Deck & Contact</h3>
        <div class="row">
          <a class="btn" href="/investors/data/SPIRAL_Investor_Deck.pdf">View Deck (PDF)</a>
          <a class="btn alt" href="mailto:invest@spiralshops.com">invest@spiralshops.com</a>
        </div>
        <p class="muted">Request detailed financials, rollout plan, and technical due diligence access.</p>
      </div>
    </div>

    <footer>
      © SPIRAL — The Local Shopping Platform • <a href="/">Back to Home</a>
    </footer>
  </div>
</body>
</html>
EOF

# harmless, non-blocking pixel placeholder
cat > public/scripts/pixel.js << 'EOF'
(function(){
  var id = (typeof process !== "undefined" && process.env && process.env.FB_PIXEL_ID) ? process.env.FB_PIXEL_ID : "";
  if (!id) { console.debug("Pixel disabled (no FB_PIXEL_ID)."); return; }
  console.log("FB Pixel enabled:", id);
})();
EOF

# sample README note for investors/data usage
cat > public/investors/data/README.txt << 'EOF'
Place sensitive investor documents here (e.g., SPIRAL_Investor_Deck.pdf).
If you set INVESTOR_KEY in the environment, require access via:
  /investors/data?key=YOUR_TOKEN
or header:
  X-Investor-Key: YOUR_TOKEN
EOF

# install deps
npm install

echo "✅ Setup complete.
- Start the server: npm start
- Healthcheck:       http://localhost:3000/api/health
- Public fallback:   http://localhost:3000/
- Investor page:     http://localhost:3000/investors
- Protected docs:    http://localhost:3000/investors/data?key=\$INVESTOR_KEY

(Optional) Set env vars:
  export FB_PIXEL_ID=YOUR_PIXEL_ID
  export INVESTOR_KEY=YOUR_SECRET
Then restart: npm start
"
```0